/* grid.scss */

/* Container: centers the grid and sets a max-width */
.grid_test {
  // width: 90%;
  // max-width: 1200px;
  // margin: 0 auto;
}

/* Row: Uses flexbox to layout columns with a negative margin to offset the gutter */
.row {
  display: flex;
  flex-wrap: wrap;
  // margin-left: -15px; // Adjust for gutter
  // margin-right: -15px; // Adjust for gutter
}

/* Column: Applies gutter padding and ensures proper box sizing */
[class*="col_"] {
  padding-left: 15px;
  padding-right: 15px;
  box-sizing: border-box;
}

/* Desktop styles (default) */
/* These widths will apply when the viewport is wider than the largest breakpoint */
.col_1_of_1 {
  width: 100%;
}

.col_1_of_2 {
  width: 50%;
}

.col_1_of_3 {
  width: 33.3333%;
}

.col_2_of_3 {
  width: 66.6667%;
}

.col_1_of_4 {
  width: 25%;
}

.col_2_of_4 {
  width: 50%;
}

.col_3_of_4 {
  width: 75%;
}

/* Tablet styles: for viewports 600px up to 992px */
/* You can customize these values as needed */
@media (max-width: 992px) {
  /* For tablets, you might want to reduce the number of columns */
  .col_1_of_2 {
    width: 50%; // still two columns if there's room
  }

  .col_1_of_3,
  .col_2_of_3 {
    width: 50%; // show two columns instead of three
  }

  .col_1_of_4,
  .col_2_of_4,
  .col_3_of_4 {
    width: 50%; // collapse to two columns
  }
}

/* Mobile styles: for viewports less than 600px */
/* On mobile devices, we typically stack columns vertically */
@media (max-width: 600px) {
  .col_1_of_2,
  .col_1_of_3,
  .col_2_of_3,
  .col_1_of_4,
  .col_2_of_4,
  .col_3_of_4 {
    width: 100%;
  }
}
